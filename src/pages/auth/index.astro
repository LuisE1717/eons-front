---
import { getSession } from "auth-astro/server";
import Auth from "../../modules/user/aplication/Auth/Auth.astro";
import AppContainer from "../../layouts/AppContainer.astro";
import { singUp } from "../../utils/api/userApi";

function getExpire() {
  var expires = new Date();
  expires.setTime(expires.getTime() + (1 * 24 * 60 * 60 * 1000));
  return expires
}
  try {
    const session = await getSession(Astro.request)
    let token = ''
    if(session?.user?.email){
        await singUp({email:session.user.email,password: import.meta.env.AUTH_SECRET})
       .then((response)=>{
         Astro.cookies.set('eons_token',response.data.accessToken,{expires: getExpire(),path:'/'})
         Astro.cookies.set('eons_user',session?.user?.email || '',{expires: getExpire(),path:'/'})
         token=Astro.cookies.get('eons_token')?.value || '';
         console.log(token)
       })
       .catch(({response})=>{console.log(response)})
       if(token)
        return Astro.redirect(`/services`,302)
  }
  else{
    Astro.cookies.delete('eons_token')
    Astro.cookies.delete('eons_user')
  }
  } catch (error) {
    console.log(error)
    
  }
---

<AppContainer>
    <Auth/>
</AppContainer>