---
import { getSession } from "auth-astro/server"
import AuthIcon from "../../../../public/customized/AuthIcon.astro"
import { getI18N } from "../../../i18n"
import Notifications from "../../../modules/Notifications/components/Notifications"
import LogOut from "../../../modules/Shared/components/LogOut/LogOut"

const currentLocale = Astro.cookies.get('eons_lng')?.value || 'en'
const i18 = getI18N({currentLocale})

const session = await getSession(Astro.request)
const user = Astro.cookies.get('eons_user')?.value

const { notifications } = Astro.props
---

{user?
<button id="session-menu">
    <AuthIcon/>
</button>
:
<button>
  <a href={`/auth`}>
    <AuthIcon/>
  </a>
</button>
}

    <div id="dropdownUsers" style={{display:'none',left:'70%'}} class="z-10 bg-white rounded-lg shadow w-64">
      <ul class="py-2 overflow-y-auto text-gray-700" aria-labelledby="dropdownUsersButton">
        <li id="profile">
          <label class="flex items-center px-4 py-2 hover:bg-slate-100 cursor-pointer">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M14.9999 15.2547C13.8661 14.4638 12.4872 14 10.9999 14C7.40399 14 4.44136 16.7114 4.04498 20.2013C4.01693 20.4483 4.0029 20.5718 4.05221 20.6911C4.09256 20.7886 4.1799 20.8864 4.2723 20.9375C4.38522 21 4.52346 21 4.79992 21H9.94465M13.9999 19.2857L15.7999 21L19.9999 17M14.9999 7C14.9999 9.20914 13.2091 11 10.9999 11C8.79078 11 6.99992 9.20914 6.99992 7C6.99992 4.79086 8.79078 3 10.9999 3C13.2091 3 14.9999 4.79086 14.9999 7Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              </path>
             </g>
            </svg>
              <span class="ml-2">{user}</span>
          </label>
          
        </li>
        <li id="notifications">
          <Notifications notifications={notifications} client:load/>
        </li>

        <li id="log-out">
          <LogOut session={session} client:load/>
        </li>
    </div>

  
<script>
    import Cookies from 'js-cookie';
    import { deleteCookie, setCookie } from '../../../utils/cookies/Cookies';
    document.addEventListener('DOMContentLoaded', async function() {
      const { signOut } = await import("auth-astro/client")
      const dropdownButton = document.getElementById('session-menu');
      const dropdownMenu = document.getElementById('dropdownUsers');
      const english = document.getElementById('profile');
      const log_out = document.getElementById('log-out');
      
      // Función para mostrar el menú
      function showMenu() {
        if(dropdownMenu && dropdownButton){
          dropdownMenu.style.display = 'block'
          dropdownMenu.style.position = 'absolute'
  
          // console.log(`Top: ${dropdownButton.getBoundingClientRect().top}
          // , Left: ${dropdownButton.getBoundingClientRect().left},
          //  Right: ${dropdownButton.getBoundingClientRect().right},
          //   Bottom: ${dropdownButton.getBoundingClientRect().bottom},
          //   width: ${dropdownButton.getBoundingClientRect().width}`);
  
            //Setting Postion
            dropdownMenu.style.left = `${dropdownButton.getBoundingClientRect().left - 200}px`
            dropdownMenu.style.right = `${dropdownButton.getBoundingClientRect().right }px`
  
            //Seeting font-size
            dropdownMenu.style.fontSize = "12px"
        }
        // Asegúrate de usar 'block' o 'inline-block' según sea necesario
      }
  
      // Función para ocultar el menú
      function hideMenu() {
        if(dropdownMenu){
          dropdownMenu.style.display = 'none'
        }
      }
  
      // async function LogOut (){
      //   if(log_out){
      //     const currentLocale = Cookies.get('eons_lng') || 'en'
      //     Cookies.remove('eons_token')
      //     Cookies.remove('eons_user')
      //     Cookies.remove('eons_refresh_token')
      //     //console.log('e')
      //     await signOut()
      //     //window.location.href = "https://accounts.google.com/logout"
      //     window.location.href = `/auth`
      //   }
      // }
      
      if(dropdownMenu && dropdownButton){
        // Agregar event listeners
        dropdownButton.addEventListener('click', showMenu);
        document.addEventListener('mousedown', function(event) {
        if (event.target && !dropdownMenu.contains(event.target as Node)) {
            hideMenu();
        }
      }, true);
      }
      if(log_out){
        //log_out.addEventListener('click', LogOut);
      }
    });
</script>