---
import Coin from "../../../modules/lanzamiento/UI/Coin"
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import BaseHead from "../BaseHead.astro";
import Footer from "../Footer.astro";
import Header from "../Header.astro";
import Button from "../UI/Button.astro";
import ThrowReact from '../React/ThrowReact'
import { getI18N } from "../../i18n";


const {response} = Astro.props
//console.log(response)

let arrayResponses = response.split(';')

function textExtract(texto: string): string {
    // Expresión regular para encontrar el texto entre "Primer lanzamiento:" y la primera coma
    const regex = /Primer lanzamiento:(.*?)\s*,/;
    
    // Buscar coincidencias en el texto
    const resultado = texto.match(regex);
    
    // Si se encontró una coincidencia, devolver el primer grupo capturado
    if (resultado && resultado[1]) {
        return resultado[1].trim(); // Eliminar espacios en blanco al principio y al final
    }
    
    // Si no se encontró ninguna coincidencia o el resultado es nulo, devolver null
    return '';
}

// function extraerAntesDeLaPrimeraComa(texto: string): string {
//     // Encuentra la posición de la primera coma
//     const posicionComa = texto.indexOf(',');

//     // Si no hay comas, retorna el texto original
//     if (posicionComa === -1) {
//         return texto;
//     }

//     // Extrae el texto antes de la primera coma
//     const textoAntesDeLaComa = texto.substring(0, posicionComa);

//     // Retorna el texto extraído
//     return textoAntesDeLaComa.trim(); // trim() se usa para eliminar espacios al principio y al final
// }

function getTextAfterFirstComma(texto: string): string {
    // Divide el texto en dos partes: antes y después de la primera coma
    const partes = texto.split(',', 2); // El segundo argumento limita el split a solo dos partes
    
    // Verifica si hay al menos una coma en el texto
    if (partes.length > 1) {
        const newText = texto.replace(partes[0].trim(),'')
        const result = newText.replace(',', ' ')
        console.log(result[0])
        // Retorna el texto después de la primera coma, excluyendo la coma
        return result; // trim() se usa para eliminar espacios al principio y al final del texto
    }
    
    // Si no hay comas, retorna una cadena vacía o un mensaje indicando que no se encontró la coma
    return '';
}

function getTextBeforeFirstComma(texto: string): string {
    // Divide el texto en dos partes: antes y después de la primera coma
    const partes = texto.split(',', 2); // El segundo argumento limita el split a solo dos partes
    
    // Verifica si hay al menos una coma en el texto
    if (partes.length > 1) {
        // Retorna el texto después de la primera coma, excluyendo la coma
        return partes[0].trim(); // trim() se usa para eliminar espacios al principio y al final del texto
    }
    
    // Si no hay comas, retorna una cadena vacía o un mensaje indicando que no se encontró la coma
    return '';
}

const currentLocale  = Astro?.currentLocale || 'en'
const i18 = getI18N({currentLocale})
---

<!doctype html>
<html lang="en">
	<head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    </head>

    <body>
        <Header/>
        <main class="flex flex-col">
            <div class= {`card z-10 
        rounded-xl bg-white shadow-xl shadow-black/5 
        ring-1 ring-slate-700/10`}>

            {arrayResponses.map((item,key)=>(
            <div >
            <div class="flex flex-col items-center my-4">
                {key==0?
                    <span>{i18['Throw'].main_response}:</span>
                    :
                    <span>{i18['Throw'].especial_response}:</span>
                    <p>{getTextBeforeFirstComma(item)}</p>
                }
            </div>

            <div class="flex flex-col items-center my-4">
                <p >
                    {key>0? getTextAfterFirstComma(item):item}
                </p>
            </div>
            </div>
            ))
            }
        </div>
        </main>
        <Footer/>
    </body>
</html>

<style>
    span {
        color: #232323;
        font-weight: 700;
    }

    html{
        overflow-y: auto;
    }

    div {
        margin: 1rem 0rem;
    }

    .throw-counter{
        margin: 0rem
    }

    main {
        width: 50%
    }

    .card{
        border-width: 1px;
        padding: 1em;
    }

    .coin-number{
        align-items: center;
    }

    .coin-number span{
        font-weight: 500;
    }

    .top{
        margin-top: 2rem;
    }

    @media (max-width: 800px){
        main {
            width: 60%;
        }

        @media (max-width: 600px){
            main{
                width: 80%;
                height: 80vh;
            }

            @media (max-width: 500px){
                main{
                    width: 100%;
                    height: 100vh;
                }
            }
        }
    }
</style>


