---
import Footer from "../../layouts/Footer.astro";
import Header from "../../layouts/Header.astro";
import First from './components/First/First'
import Third from './components/Third/Third'
import Second from './components/Second/Second'
import FirstStep from './components/FirstStep/FirstStep'
import SecondStep from './components/SecondStep/SecondStep'
import WebSocketComponent from "../Shared/context/WebSocket";
import { io } from "socket.io-client";
import { getProfile } from '../../utils/api/userApi'
import { getExpire } from "../../utils/cookies/Cookies";

let notificaciones = []

try {
    const profile = await getProfile(Astro.cookies.get("eons_token")?.value || '')
    console.log(profile)
    Astro.cookies.set('eons_essence',profile?.data.essence,{expires:getExpire(7)})
    if(profile?.data?.notificaciones && profile?.data?.notificaciones?.length > 0)
        notificaciones = profile?.data?.notificaciones
} catch (error) {
    
}

const {first_time} = Astro.props
---
<Header notificaciones={notificaciones}/>
<!-- <WebSocketComponent client:load/>  -->
<div class="flex flex-col items-center w-full px-8">
    <div class="flex flex-col max-w-[1200px] w-full">
        <First/>
        <FirstStep/>
        <Second first_time={first_time?true:false} client:load/>
        <SecondStep/>
        <Third/>
    </div>
</div>
<Footer/>

<!-- <script>
    import Cookies from "js-cookie"
import { io } from "socket.io-client"

    const getUsername = () => {
      const username = Cookies.get('eons_name')
      if (username) {
        console.log(`User existed ${username}`)
        return username
      }
}

const socket = io('http://localhost:3000/')

socket.on('register',(resp) =>{
    console.log(resp)
})
</script> -->
